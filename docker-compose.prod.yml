version: '3.8'

services:
  n8n:
    build:
      context: ./docker/n8n
    restart: always
    # Using a reverse proxy instead of direct exposure
    expose:
      - "${N8N_PORT}"
    volumes:
      - n8n_data:/home/node/.n8n
    environment:
      - N8N_PORT=${N8N_PORT}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - N8N_HOST=${N8N_HOST}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_LOG_LEVEL=${N8N_LOG_LEVEL}
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=${N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE}
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
    networks:
      - automation-network

  idea-generator:
    build:
      context: ./services/idea-generator
    restart: always
    # No direct port exposure in production
    expose:
      - "3030"
    environment:
      - DEBUG=${DEBUG}
    networks:
      - automation-network
      
  video-generator:
    build:
      context: ./services/video-generator
    restart: always
    expose:
      - "3031"
    environment:
      - DEBUG=${DEBUG}
      - MPT_API=http://moneyprinter:${MONEYPRINTER_API_PORT}/api/v1
    volumes:
      - shared-media:/app/media
    depends_on:
      - moneyprinter
    networks:
      - automation-network
      
  moneyprinter:
    build:
      context: ./MoneyPrinterTurbo
    restart: always
    expose:
      - "8080"
      - "8501"
    volumes:
      - ./config/moneyprinter:/app/config
      - shared-media:/app/media
    environment:
      - DEBUG=${DEBUG}
      - AI_PROVIDER=${AI_PROVIDER}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    networks:
      - automation-network

      
  social-publisher:
    build:
      context: ./services/social-publisher
    restart: always
    expose:
      - "3032"
    volumes:
      - ./lib/social-auto-upload:/app/social-auto-upload
      - shared-media:/app/media
    environment:
      - DEBUG=${DEBUG}
      - SOCIAL_AUTO_UPLOAD_PATH=/app/social-auto-upload
    networks:
      - automation-network
      
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - n8n
    networks:
      - automation-network

networks:
  automation-network:
    driver: bridge
    
volumes:
  n8n_data:
    driver: local
  shared-media:
    driver: local